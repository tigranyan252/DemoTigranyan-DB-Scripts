-- ***************************************************************
-- Единый SQL-скрипт для создания базы данных "DemoTigranyan"
-- и заполнения её данными для экзамена (без явного пути к файлам)
-- ***************************************************************

-- Переключаемся на master базу данных для операций с БД
USE [master];
GO

-- Проверяем, существует ли БД, и удаляем, если да (для чистого старта)
-- ВНИМАНИЕ: Эта команда удалит базу данных DemoTigranyan, если она существует.
-- Используй осторожно! Если на экзамене запрещено удалять и создавать БД,
-- закомментируй следующие строки до CREATE DATABASE.
IF EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = N'DemoTigranyan')
BEGIN
    ALTER DATABASE [DemoTigranyan] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [DemoTigranyan];
END;
GO

-- Создание новой базы данных
-- Файлы .mdf и .ldf будут созданы в стандартной директории SQL Server по умолчанию.
-- ЕСЛИ НЕ РАЗРЕШЕНО ИСПОЛЬЗОВАТЬ CREATE DATABASE:
-- Закомментируй эту часть и создай пустую БД с именем "DemoTigranyan" вручную через SSMS
-- (правая кнопка на "Databases" -> "New Database..." -> введи "DemoTigranyan").
CREATE DATABASE [DemoTigranyan]
CONTAINMENT = NONE
WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF;
GO

-- Настройка опций базы данных (стандартные, могут быть специфичны для твоей установки)
-- Эти команды могут потребовать дополнительных разрешений.
-- Если возникнут ошибки, можно попробовать закомментировать их.
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [DemoTigranyan].[dbo].[sp_fulltext_database] @action = 'enable';
end
GO

ALTER DATABASE [DemoTigranyan] SET ANSI_NULL_DEFAULT OFF;
GO
ALTER DATABASE [DemoTigranyan] SET ANSI_NULLS OFF;
GO
ALTER DATABASE [DemoTigranyan] SET ANSI_PADDING OFF;
GO
ALTER DATABASE [DemoTigranyan] SET ANSI_WARNINGS OFF;
GO
ALTER DATABASE [DemoTigranyan] SET ARITHABORT OFF;
GO
ALTER DATABASE [DemoTigranyan] SET AUTO_CLOSE OFF;
GO
ALTER DATABASE [DemoTigranyan] SET AUTO_SHRINK OFF;
GO
ALTER DATABASE [DemoTigranyan] SET AUTO_UPDATE_STATISTICS ON;
GO
ALTER DATABASE [DemoTigranyan] SET CURSOR_CLOSE_ON_COMMIT OFF;
GO
ALTER DATABASE [DemoTigranyan] SET CURSOR_DEFAULT  GLOBAL;
GO
ALTER DATABASE [DemoTigranyan] SET CONCAT_NULL_YIELDS_NULL OFF;
GO
ALTER DATABASE [DemoTigranyan] SET NUMERIC_ROUNDABORT OFF;
GO
ALTER DATABASE [DemoTigranyan] SET QUOTED_IDENTIFIER OFF;
GO
ALTER DATABASE [DemoTigranyan] SET RECURSIVE_TRIGGERS OFF;
GO
ALTER DATABASE [DemoTigranyan] SET  ENABLE_BROKER;
GO
ALTER DATABASE [DemoTigranyan] SET AUTO_UPDATE_STATISTICS_ASYNC OFF;
GO
ALTER DATABASE [DemoTigranyan] SET DATE_CORRELATION_OPTIMIZATION OFF;
GO
ALTER DATABASE [DemoTigranyan] SET TRUSTWORTHY OFF;
GO
ALTER DATABASE [DemoTigranyan] SET ALLOW_SNAPSHOT_ISOLATION OFF;
GO
ALTER DATABASE [DemoTigranyan] SET PARAMETERIZATION SIMPLE;
GO
ALTER DATABASE [DemoTigranyan] SET READ_COMMITTED_SNAPSHOT OFF;
GO
ALTER DATABASE [DemoTigranyan] SET HONOR_BROKER_PRIORITY OFF;
GO
ALTER DATABASE [DemoTigranyan] SET RECOVERY FULL;
GO
ALTER DATABASE [DemoTigranyan] SET  MULTI_USER;
GO
ALTER DATABASE [DemoTigranyan] SET PAGE_VERIFY CHECKSUM;
GO
ALTER DATABASE [DemoTigranyan] SET DB_CHAINING OFF;
GO
ALTER DATABASE [DemoTigranyan] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF );
GO
ALTER DATABASE [DemoTigranyan] SET TARGET_RECOVERY_TIME = 60 SECONDS;
GO
ALTER DATABASE [DemoTigranyan] SET DELAYED_DURABILITY = DISABLED;
GO
ALTER DATABASE [DemoTigranyan] SET ACCELERATED_DATABASE_RECOVERY = OFF;
GO
ALTER DATABASE [DemoTigranyan] SET QUERY_STORE = OFF;
GO
ALTER DATABASE [DemoTigranyan] SET  READ_WRITE;
GO

-- Переключаемся на только что созданную базу данных
USE DemoTigranyan;
GO

-- ***************************************************************
-- 1. Создание таблиц
-- ***************************************************************

-- Таблица: ТипыМатериалов (Справочник)
CREATE TABLE ТипыМатериалов (
    id_типа_материала INT PRIMARY KEY IDENTITY(1,1),
    тип_материала NVARCHAR(255) NOT NULL,
    процент_брака DECIMAL(5,4) NOT NULL -- Процент брака, например 0.0500 для 5%
);
GO

-- Таблица: ТипыПродукции (Справочник)
CREATE TABLE ТипыПродукции (
    id_типа_продукции INT PRIMARY KEY IDENTITY(1,1),
    тип_продукции NVARCHAR(255) NOT NULL,
    коэффициент DECIMAL(10,4) NOT NULL -- Увеличена точность для коэффициента, т.к. FLOAT неточен
);
GO

-- Таблица: ТипыПартнеров (Новая таблица для 3НФ)
CREATE TABLE ТипыПартнеров (
    id_типа_партнера INT PRIMARY KEY IDENTITY(1,1),
    наименование_типа NVARCHAR(100) NOT NULL UNIQUE
);
GO

-- Таблица: Сотрудники (Для id_менеджера в Заявках)
CREATE TABLE Сотрудники (
    id_сотрудника INT PRIMARY KEY IDENTITY(1,1),
    фио NVARCHAR(255) NOT NULL,
    дата_рождения DATE,
    паспортные_данные NVARCHAR(20),
    банковские_реквизиты NVARCHAR(50),
    наличие_семьи NVARCHAR(10),
    состояние_здоровья NVARCHAR(100)
);
GO

-- Таблица: Поставщики
CREATE TABLE Поставщики (
    id_поставщика INT PRIMARY KEY IDENTITY(1,1),
    тип NVARCHAR(100),
    наименование NVARCHAR(255) NOT NULL,
    инн NVARCHAR(12) UNIQUE,
    история_поставок NVARCHAR(MAX)
);
GO

-- Таблица: Продукция
CREATE TABLE Продукция (
    id_продукта INT PRIMARY KEY IDENTITY(1,1),
    артикул NVARCHAR(50) UNIQUE NOT NULL,
    id_типа_продукции INT NOT NULL,
    наименование NVARCHAR(255) NOT NULL,
    описание NVARCHAR(MAX),
    изображение VARBINARY(MAX),
    минимальная_стоимость DECIMAL(15,2) NOT NULL CHECK (минимальная_стоимость >= 0),
    длина_упаковки DECIMAL(10,3),
    ширина_упаковки DECIMAL(10,3),
    высота_упаковки DECIMAL(10,3),
    вес_без_упаковки DECIMAL(10,3),
    вес_с_упаковкой DECIMAL(10,3),
    сертификат_качества VARBINARY(MAX),
    номер_стандарта NVARCHAR(50),
    время_изготовления INT,
    себестоимость DECIMAL(15,2),
    номер_цеха NVARCHAR(20),
    количество_человек INT,
    FOREIGN KEY (id_типа_продукции) REFERENCES ТипыПродукции(id_типа_продукции)
);
GO

-- Таблица: СоставПродукции (Новая таблица для нормализации "необходимые_материалы" в Продукции)
CREATE TABLE СоставПродукции (
    id_состава INT PRIMARY KEY IDENTITY(1,1),
    id_продукта INT NOT NULL,
    id_материала INT NOT NULL, -- Будет внешний ключ к таблице Материалы
    количество_материала DECIMAL(15,3) NOT NULL, -- Количество материала для 1 единицы продукции
    FOREIGN KEY (id_продукта) REFERENCES Продукция(id_продукта)
    -- FOREIGN KEY (id_материала) REFERENCES Материалы(id_материала) -- Этот FK будет добавлен после создания Материалов
);
GO

-- Таблица: Материалы
CREATE TABLE Материалы (
    id_материала INT PRIMARY KEY IDENTITY(1,1),
    id_типа_материала INT NOT NULL,
    наименование NVARCHAR(255) NOT NULL,
    id_поставщика INT, -- Может быть NULL, если поставщик не указан
    количество_в_упаковке INT,
    единица_измерения NVARCHAR(20),
    описание NVARCHAR(MAX),
    изображение VARBINARY(MAX),
    стоимость DECIMAL(15,2) NOT NULL CHECK (стоимость >= 0),
    количество_на_складе INT NOT NULL DEFAULT 0 CHECK (количество_на_складе >= 0),
    минимальное_количество INT NOT NULL DEFAULT 0 CHECK (минимальное_количество >= 0),
    FOREIGN KEY (id_поставщика) REFERENCES Поставщики(id_поставщика),
    FOREIGN KEY (id_типа_материала) REFERENCES ТипыМатериалов(id_типа_материала)
);
GO

-- Добавляем внешний ключ к Материалам в СоставПродукции
ALTER TABLE СоставПродукции
ADD FOREIGN KEY (id_материала) REFERENCES Материалы(id_материала);
GO

-- Таблица: Партнеры (Исправленная для 3НФ)
CREATE TABLE Партнеры (
    id_партнера INT PRIMARY KEY IDENTITY(1,1),
    id_типа_партнера INT, -- Ссылка на ТипыПартнеров
    название_компании NVARCHAR(255) NOT NULL,
    юридический_адрес NVARCHAR(255),
    инн NVARCHAR(12) UNIQUE NOT NULL,
    фио_директора NVARCHAR(255),
    телефон NVARCHAR(20),
    email NVARCHAR(100),
    логотип VARBINARY(MAX),
    рейтинг INT CHECK (рейтинг >= 0),
    FOREIGN KEY (id_типа_партнера) REFERENCES ТипыПартнеров(id_типа_партнера)
);
GO

-- Таблица: МестаПродажПартнера (Для нормализации места_продаж)
CREATE TABLE МестаПродажПартнера (
    id_места_продаж INT PRIMARY KEY IDENTITY(1,1),
    id_партнера INT NOT NULL,
    наименование_места NVARCHAR(255) NOT NULL,
    адрес_места NVARCHAR(500),
    FOREIGN KEY (id_партнера) REFERENCES Партнеры(id_партнера)
);
GO

-- Таблица: ИсторияРеализацииПартнера (Для нормализации история_реализации)
CREATE TABLE ИсторияРеализацииПартнера (
    id_истории INT PRIMARY KEY IDENTITY(1,1),
    id_партнера INT NOT NULL,
    дата_реализации DATE NOT NULL,
    id_продукта INT NOT NULL,
    количество INT NOT NULL CHECK (количество > 0),
    сумма_реализации DECIMAL(15,2) NOT NULL CHECK (сумма_реализации >= 0),
    скидка DECIMAL(5,2) DEFAULT 0 CHECK (скидка >= 0 AND скидка <= 100), -- Процент скидки
    FOREIGN KEY (id_партнера) REFERENCES Партнеры(id_партнера),
    FOREIGN KEY (id_продукта) REFERENCES Продукция(id_продукта)
);
GO

-- Таблица: СтатусыЗаявок (Справочник для нормализации статуса)
CREATE TABLE СтатусыЗаявок (
    id_статуса_заявки INT PRIMARY KEY IDENTITY(1,1),
    наименование_статуса NVARCHAR(100) NOT NULL UNIQUE
);
GO

-- Таблица: Заявки (Исправленная для 3НФ)
CREATE TABLE Заявки (
    id_заявки INT PRIMARY KEY IDENTITY(1,1),
    id_партнера INT NOT NULL,
    id_менеджера INT, -- Менеджер может быть NULL, если еще не назначен
    id_статуса INT NOT NULL, -- Внешний ключ на СтатусыЗаявок
    дата_создания DATETIME NOT NULL DEFAULT GETDATE(), -- DATETIME для точности времени
    дата_предоплаты DATETIME, -- Срок предоплаты - это PrepaymentDate
    дата_полной_оплаты DATETIME,
    общая_стоимость DECIMAL(18,2) CHECK (общая_стоимость >= 0), -- Можно хранить для ускорения, но обновлять
    предоплата_получена BIT NOT NULL DEFAULT 0,
    FOREIGN KEY (id_партнера) REFERENCES Партнеры(id_партнера),
    FOREIGN KEY (id_менеджера) REFERENCES Сотрудники(id_сотрудника),
    FOREIGN KEY (id_статуса) REFERENCES СтатусыЗаявок(id_статуса_заявки)
);
GO

-- Таблица: Продукция_в_заявке (Позиции заявки)
CREATE TABLE Продукция_в_заявке (
    id INT PRIMARY KEY IDENTITY(1,1),
    id_заявки INT NOT NULL,
    id_продукта INT NOT NULL,
    количество INT NOT NULL CHECK (количество > 0),
    цена_на_момент_заказа DECIMAL(15,2) NOT NULL CHECK (цена_на_момент_заказа >= 0), -- Лучше хранить цену на момент заказа
    дата_производства DATE, -- Дата производства конкретно этой позиции в заявке
    FOREIGN KEY (id_заявки) REFERENCES Заявки(id_заявки),
    FOREIGN KEY (id_продукта) REFERENCES Продукция(id_продукта)
);
GO

-- Таблица: Склад (для операций)
CREATE TABLE Склад (
    id_операции INT PRIMARY KEY IDENTITY(1,1),
    тип_операции NVARCHAR(50) NOT NULL, -- Поступление, Резервирование, Отпуск, Списание, Поступление_ГП, Выбытие_ГП
    дата_операции DATETIME NOT NULL DEFAULT GETDATE(),
    id_материала INT, -- Может быть NULL для операций с готовой продукцией
    id_продукта_готовая INT, -- ID для готовой продукции
    количество INT NOT NULL,
    FOREIGN KEY (id_материала) REFERENCES Материалы(id_материала),
    FOREIGN KEY (id_продукта_готовая) REFERENCES Продукция(id_продукта) -- Ссылка на продукцию как готовую
);
GO

-- Таблица: Доступ (Для сотрудников)
CREATE TABLE Доступ (
    id_доступа INT PRIMARY KEY IDENTITY(1,1),
    id_сотрудника INT NOT NULL,
    дверь NVARCHAR(100),
    время_прохода DATETIME NOT NULL,
    FOREIGN KEY (id_сотрудника) REFERENCES Сотрудники(id_сотрудника)
);
GO

-- Таблица: Производство (Журнал производства или настройки)
CREATE TABLE Производство (
    id_производства INT PRIMARY KEY IDENTITY(1,1),
    название_процесса NVARCHAR(255),
    технология_производства NVARCHAR(MAX),
    контроль_качества NVARCHAR(MAX),
    заказ_материалов NVARCHAR(MAX)
);
GO

-- Таблица: ГотоваяПродукцияНаСкладе (для текущих остатков готовой продукции)
CREATE TABLE ГотоваяПродукцияНаСкладе (
    id_записи INT PRIMARY KEY IDENTITY(1,1),
    id_продукта INT NOT NULL UNIQUE, -- Уникальность по продукту
    количество INT NOT NULL CHECK (количество >= 0),
    дата_последнего_обновления DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (id_продукта) REFERENCES Продукция(id_продукта)
);
GO

-- ***************************************************************
-- 2. Вставка справочных данных
-- ***************************************************************

-- Вставка данных в ТипыМатериалов
INSERT INTO ТипыМатериалов (тип_материала, процент_брака) VALUES (N'Тип материала 1', 0.002);
INSERT INTO ТипыМатериалов (тип_материала, процент_брака) VALUES (N'Тип материала 2', 0.005);
INSERT INTO ТипыМатериалов (тип_материала, процент_брака) VALUES (N'Тип материала 3', 0.003);
INSERT INTO ТипыМатериалов (тип_материала, процент_брака) VALUES (N'Тип материала 4', 0.0015);
INSERT INTO ТипыМатериалов (тип_материала, процент_брака) VALUES (N'Тип материала 5', 0.0018);
GO

-- Вставка данных в ТипыПродукции
INSERT INTO ТипыПродукции (тип_продукции, коэффициент) VALUES (N'Древесно-плитные материалы', 1.5);
INSERT INTO ТипыПродукции (тип_продукции, коэффициент) VALUES (N'Декоративные панели', 3.5);
INSERT INTO ТипыПродукции (тип_продукции, коэффициент) VALUES (N'Плитка', 5.25);
INSERT INTO ТипыПродукции (тип_продукции, коэффициент) VALUES (N'Фасадные материалы', 4.5);
INSERT INTO ТипыПродукции (тип_продукции, коэффициент) VALUES (N'Напольные покрытия', 2.17);
GO

-- Вставка данных в ТипыПартнеров
INSERT INTO ТипыПартнеров (наименование_типа) VALUES (N'ЗАО');
INSERT INTO ТипыПартнеров (наименование_типа) VALUES (N'ООО');
INSERT INTO ТипыПартнеров (наименование_типа) VALUES (N'ПАО');
INSERT INTO ТипыПартнеров (наименование_типа) VALUES (N'ОАО');
GO

-- Вставка данных в СтатусыЗаявок
INSERT INTO СтатусыЗаявок (наименование_статуса) VALUES (N'Новая');
INSERT INTO СтатусыЗаявок (наименование_статуса) VALUES (N'В обработке');
INSERT INTO СтатусыЗаявок (наименование_статуса) VALUES (N'Выполнена');
GO

-- Вставка базового сотрудника для менеджера
INSERT INTO Сотрудники (фио, дата_рождения, паспортные_данные, банковские_реквизиты, наличие_семьи, состояние_здоровья)
VALUES (N'Менеджер Тестовый', '1990-01-01', NULL, NULL, NULL, NULL);
GO

-- ***************************************************************
-- 3. Вставка данных в основные таблицы
-- ***************************************************************

-- Вставка данных в Партнеры (с временным типом для последующего обновления id_типа_партнера)
-- Добавляем временную колонку 'тип_временный'
ALTER TABLE Партнеры ADD тип_временный NVARCHAR(100);
GO

INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ЗАО', N'Стройдвор', N'143001, Московская область, город Одинцово, уд. Ленина, 21', N'9432455179', N'Андреева Ангелина Николаевна', N'492 452 22 82', N'angelina77@kart.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ЗАО', N'Самоделка', N'306230, Курская область, город Обоянь, ул. 1 Мая, 89', N'7803888520', N'Мельников Максим Петрович', N'812 267 19 59', N'melnikov.maksim88@hm.ru', 3);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ООО', N'Деревянные изделия', N'238340, Калининградская область, город Светлый, ул. Морская, 12', N'8430391035', N'Лазарев Алексей Сергеевич', N'922 467 93 83', N'aleksejlazarev@al.ru', 4);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ООО', N'Декор и отделка', N'685000, Магаданская область, город Магадан, ул. Горького, 15', N'4318170454', N'Саншокова Мадина Муратовна', N'413 230 30 79', N'mmsanshokova@lss.ru', 7);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ООО', N'Паркет', N'606440, Нижегородская область, город Бор, ул. Свободы, 3', N'7687851800', N'Иванов Дмитрий Сергеевич', N'921 851 21 22', N'ivanov.dmitrij@mail.ru', 7);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ПАО', N'Дом и сад', N'393760, Тамбовская область, город Мичуринск, ул. Красная, 50', N'6119144874', N'Аникеева Екатерина Алексеевна', N'499 936 29 26', N'ekaterina.anikeeva@ml.ru', 7);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ОАО', N'Легкий шаг', N'307370, Курская область, город Рыльск, ул. Гагарина, 16', N'1122170258', N'Богданова Ксения Владимировна', N'495 445 61 41', N'bogdanova.kseniya@bkv.ru', 6);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ПАО', N'СтройМатериалы', N'140300, Московская область, город Егорьевск, ул. Советская, 24', N'8355114917', N'Холодова Валерия Борисовна', N'499 234 56 78', N'holodova@education.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ОАО', N'Мир отделки', N'344116, Ростовская область, город Ростов-на-Дону, ул. Артиллерийская, 4', N'3532367439', N'Крылов Савелий Тимофеевич', N'908 713 51 88', N'stkrylov@mail.ru', 8);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ОАО', N'Технологии комфорта', N'164500, Архангельская область, город Северодвинск, ул. Ломоносова, 29', N'2362431140', N'Белов Кирилл Александрович', N'918 432 12 34', N'kirill_belov@kir.ru', 4);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ПАО', N'Твой дом', N'354000, Краснодарский край, город Сочи, ул. Больничная, 11', N'4159215346', N'Демидов Дмитрий Александрович', N'919 698 75 43', N'dademidov@ml.ru', 10);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ЗАО', N'Новые краски', N'187556, Ленинградская область, город Тихвин, ул. Гоголя, 18', N'9032455179', N'Алиев Дамир Игоревич', N'812 823 93 42', N'alievdamir@tk.ru', 9);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ОАО', N'Политехник', N'143960, Московская область, город Реутов, ул. Новая, 55', N'3776671267', N'Котов Михаил Михайлович', N'495 895 71 77', N'mmkotov56@educat.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ОАО', N'СтройАрсенал', N'242611, Брянская область, город Фокино, ул. Фокино, 23', N'7447864518', N'Семенов Дмитрий Максимович', N'896 123 45 56', N'semenov.dm@mail.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ПАО', N'Декор и порядок', N'309500, Белгородская область, город Старый Оскол, ул. Цветочная, 20', N'9037040523', N'Болотов Артем Игоревич', N'950 234 12 12', N'artembolotov@ab.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ПАО', N'Умные решения', N'652050, Кемеровская область, город Юрга, ул. Мира, 42', N'6221520857', N'Воронова Анастасия Валерьевна', N'923 233 27 69', N'voronova_anastasiya@mail.ru', 3);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ЗАО', N'Натуральные покрытия', N'188300, Ленинградская область, город Гатчина, пр. 25 Октября, 17', N'2262431140', N'Горбунов Василий Петрович', N'902 688 28 96', N'vpgorbunov24@vvs.ru', 9);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ООО', N'СтройМастер', N'184250, Мурманская область, город Кировск, пр. Ленина, 24', N'4155215346', N'Смирнов Иван Андреевич', N'917 234 75 55', N'smirnov_ivan@kv.ru', 9);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ООО', N'Гранит', N'162390, Вологодская область, город Великий Устюг, ул. Железнодорожная, 36', N'3961234561', N'Джумаев Ахмед Умарович', N'495 452 55 95', N'dzhumaev.ahmed@amail.ru', 5);
INSERT INTO Партнеры (тип_временный, название_компании, юридический_адрес, инн, фио_директора, телефон, email, рейтинг) VALUES (N'ЗАО', N'Строитель', N'188910, Ленинградская область, город Приморск, ш. Приморское, 18', N'9600275878', N'Петров Николай Тимофеевич', N'916 596 15 55', N'petrov.nikolaj31@mail.ru', 10);
GO

-- Обновление id_типа_партнера на основе временной колонки
UPDATE P
SET id_типа_партнера = TP.id_типа_партнера
FROM Партнеры P
JOIN ТипыПартнеров TP ON P.тип_временный = TP.наименование_типа;
GO

-- Удаление временной колонки, она больше не нужна
ALTER TABLE Партнеры DROP COLUMN тип_временный;
GO

-- Вставка данных в Продукция
INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Фанера ФСФ 1800х1200х27 мм бежевая береза', N'6549922', 5100.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Древесно-плитные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Мягкие панели прямоугольник велюр цвет оливковый', N'7018556', 1880.0, N'600х300х35 мм', 600.0, 300.0, 35.0
FROM ТипыПродукции WHERE тип_продукции = N'Декоративные панели';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Бетонная плитка Белый кирпич микс 30х7,3 см', N'5028272', 2080.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Фасадные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плитка Мозаика 10x10 см цвет белый глянец', N'8028248', 2500.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Плитка';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Ламинат Дуб Античный серый 32 класс толщина 8 мм с фаской', N'9250282', 4050.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Напольные покрытия';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Стеновая панель МДФ Флора', N'7130981', 2100.56, N'1440x500x10 мм', 1440.0, 500.0, 10.0
FROM ТипыПродукции WHERE тип_продукции = N'Декоративные панели';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Бетонная плитка Красный кирпич 20x6,5 см', N'5029784', 2760.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Фасадные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Ламинат Канди Дизайн 33 класс толщина 8 мм с фаской', N'9658953', 3200.96, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Напольные покрытия';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плита ДСП 11 мм влагостойкая', N'6026662', 497.69, N'594x1815 мм', 594.0, 1815.0, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Древесно-плитные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Ламинат с натуральным шпоном Дуб Эксперт толщина 6 мм с фаской', N'9159043', 3750.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Напольные покрытия';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плитка настенная Формат 20x40 см матовая цвет мята', N'8588376', 2500.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Плитка';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плита ДСП Кантри 16 мм', N'6758375', 1050.96, N'900x1200 мм', 900.0, 1200.0, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Древесно-плитные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Стеновая панель МДФ Сосна Полярная 60х280х4мсм цвет коричневый', N'7759324', 1700.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Декоративные панели';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Клинкерная плитка коричневая 29,8х29,8 см', N'5118827', 860.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Фасадные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плитка настенная Цветок 60x120 см цвет зелено-голубой', N'8559898', 2300.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Плитка';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Пробковое настенное покрытие 600х300х3 мм белый ', N'7259474', 3300.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Декоративные панели';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Плитка настенная Нева 30x60 см цвет серый', N'8115947', 1700.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Плитка';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Гипсовая плитка настенная Дом на берегу кирпич белый 18,5х4,5 см', N'5033136', 499.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Фасадные материалы';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Ламинат Дуб Северный белый 32 класс толщина 8 мм с фаской', N'9028048', 2550.0, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Напольные покрытия';

INSERT INTO Продукция (id_типа_продукции, наименование, артикул, минимальная_стоимость, описание, длина_упаковки, ширина_упаковки, высота_упаковки)
SELECT id_типа_продукции, N'Дерево волокнистая плита Дуб Винтаж 1200х620х3 мм светло-коричневый', N'6123459', 900.5, N'', NULL, NULL, NULL
FROM ТипыПродукции WHERE тип_продукции = N'Древесно-плитные материалы';
GO

-- ***************************************************************
-- 4. Вставка данных о заявках и позициях в них
-- ***************************************************************

-- Переменные для получения ID
DECLARE @manager_id INT;
SELECT @manager_id = id_сотрудника FROM Сотрудники WHERE фио = N'Менеджер Тестовый';

DECLARE @status_new_id INT;
SELECT @status_new_id = id_статуса_заявки FROM СтатусыЗаявок WHERE наименование_статуса = N'Новая';

-- Вставка данных из image_638ffa.png в Заявки и Продукция_в_заявке
-- Каждая строка из изображения будет интерпретироваться как отдельная новая заявка
-- и соответственно одна позиция в этой заявке.

-- Строка 1: Плитка Мозаика 10x10 см цвет белый глянец | Стройдвор | 2000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Стройдвор';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 2000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Плитка Мозаика 10x10 см цвет белый глянец';

-- Строка 2: Ламинат Дуб Античный серый 32 класс толщина 8 мм с фаской | Самоделка | 3000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Самоделка';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 3000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Ламинат Дуб Античный серый 32 класс толщина 8 мм с фаской';

-- Строка 3: Фанера ФСФ 1800х1200х27 мм бежевая береза | Деревянные изделия | 1000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Деревянные изделия';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 1000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 4: Бетонная плитка Белый кирпич микс 30х7,3 см | Декор и отделка | 9500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Декор и отделка';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 9500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Бетонная плитка Белый кирпич микс 30х7,3 см';

-- Строка 5: Фанера ФСФ 1800х1200х27 мм бежевая береза | Паркет | 2000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Паркет';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 2000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 6: Гипсовая плитка настенная Дом на берегу кирпич белый 18,5х4,5 см | Дом и сад | 1100
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Дом и сад';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 1100, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Гипсовая плитка настенная Дом на берегу кирпич белый 18,5х4,5 см';

-- Строка 7: Плита ДСП Кантри 16 мм 900x1200 мм | Легкий шаг | 5000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Легкий шаг';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 5000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Плита ДСП Кантри 16 мм 900x1200 мм';

-- Строка 8: Фанера ФСФ 1800х1200х27 мм бежевая береза | СтройМатериалы | 2500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'СтройМатериалы';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 2500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 9: Мягкие панели прямоугольник велюр цвет оливковый 600х300х35 мм | Мир отделки | 6000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Мир отделки';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 6000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Мягкие панели прямоугольник велюр цвет оливковый 600х300х35 мм';

-- Строка 10: Стеновая панель МДФ Флора 1440x500x10 мм | Технологии комфорта | 7000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Технологии комфорта';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 7000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Стеновая панель МДФ Флора 1440x500x10 мм';

-- Строка 11: Плитка Мозаика 10x10 см цвет белый глянец | Твой дом | 5000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Твой дом';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 5000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Плитка Мозаика 10x10 см цвет белый глянец';

-- Строка 12: Плитка Мозаика 10x10 см цвет белый глянец | Новые краски | 7500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Новые краски';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 7500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Плитка Мозаика 10x10 см цвет белый глянец';

-- Строка 13: Фанера ФСФ 1800х1200х27 мм бежевая береза | Политехник | 3000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Политехник';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 3000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 14: Гипсовая плитка настенная Дом на берегу кирпич белый 18,5х4,5 см | СтройАрсенал | 500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'СтройАрсенал';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Гипсовая плитка настенная Дом на берегу кирпич белый 18,5х4,5 см';

-- Строка 15: Пробковое настенное покрытие 600х300х3 мм белый | Декор и порядок | 7000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Декор и порядок';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 7000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Пробковое настенное покрытие 600х300х3 мм белый ';

-- Строка 16: Плита ДСП 11 мм влагостойкая 594x1815 мм | Умные решения | 4000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Умные решения';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 4000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Плита ДСП 11 мм влагостойкая 594x1815 мм';

-- Строка 17: Фанера ФСФ 1800х1200х27 мм бежевая береза | Натуральные покрытия | 3500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Натуральные покрытия';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 3500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 18: Фанера ФСФ 1800х1200х27 мм бежевая береза | СтройМастер | 7900
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'СтройМастер';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 7900, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 19: Фанера ФСФ 1800х1200х27 мм бежевая береза | Гранит | 4500
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Гранит';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 4500, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';

-- Строка 20: Фанера ФСФ 1800х1200х27 мм бежевая береза | Строитель | 5000
INSERT INTO Заявки (id_партнера, id_менеджера, id_статуса, дата_создания, предоплата_получена)
SELECT P.id_партнера, @manager_id, @status_new_id, GETDATE(), 0
FROM Партнеры P
WHERE P.название_компании = N'Строитель';

INSERT INTO Продукция_в_заявке (id_заявки, id_продукта, количество, цена_на_момент_заказа)
SELECT (SELECT MAX(id_заявки) FROM Заявки), Prod.id_продукта, 5000, Prod.минимальная_стоимость
FROM Продукция Prod
WHERE Prod.наименование = N'Фанера ФСФ 1800х1200х27 мм бежевая береза';
GO

-- Обновление общей стоимости заявок (можно сделать через триггер или регулярное задание)
UPDATE З
SET общая_стоимость = (
    SELECT SUM(ПЗ.количество * ПЗ.цена_на_момент_заказа)
    FROM Продукция_в_заявке ПЗ
    WHERE ПЗ.id_заявки = З.id_заявки
)
FROM Заявки З;
GO